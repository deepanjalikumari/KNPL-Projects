<mvc:View
	controllerName="com.knpl.pragati.Catelogue.controller.Object"
	xmlns="sap.m"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:semantic="sap.f.semantic"
    xmlns:uxap="sap.uxap"
    xmlns:layout="sap.ui.layout"
    xmlns:core="sap.ui.core"
    xmlns:f="sap.f"
    xmlns:card="sap.f.cards"
    xmlns:tnt="sap.tnt"
    class="sapUiSizeCompact"
    >
 <uxap:ObjectPageLayout id="ObjectPageLayout" showTitleInHeaderContent="true" upperCaseAnchorBar="false" headerContentPinnable="true" toggleHeaderOnTitleClick="true"  >
            <uxap:headerTitle>
                <uxap:ObjectPageDynamicHeaderTitle>
                    <uxap:breadcrumbs>
                        <Breadcrumbs id="breadcrumbsId" currentLocationText="Catelogue Details">
                            <Link text="Catelogues" press="handleAllCatelogueLinkPress"/>
                        </Breadcrumbs>
                    </uxap:breadcrumbs>

                    <uxap:expandedHeading>
                        <Title text="{Name}" class="sapUiTinyMarginEnd"/>
                    </uxap:expandedHeading>

                    <uxap:snappedHeading>
                        <FlexBox fitContainer="true" alignItems="Center" renderType="Bare">
                            <f:Avatar class="sapUiTinyMarginEnd" displayShape="Square"/>
                            <FlexBox direction="Column" renderType="Bare">
                                <Title text="{Name}" wrapping="true"/>
                                <!-- <Text text="{Id}"/> -->
                            </FlexBox>
                        </FlexBox>
                    </uxap:snappedHeading>

                    <!-- <uxap:expandedContent>
                        <Text text="{Name}"/>
                    </uxap:expandedContent> -->
                     

                    <uxap:snappedTitleOnMobile>
                        <Title text="{Name}"/>
                    </uxap:snappedTitleOnMobile>

                   
                </uxap:ObjectPageDynamicHeaderTitle>


            </uxap:headerTitle>
            <uxap:headerContent>
                <FlexBox wrap="Wrap" height="100%" class="sapUiSmallMarginBottom" renderType="Bare">
                    
                    <f:Avatar class="sapUiSmallMarginEnd" displayShape="Square" displaySize="XL"/>

                    <FlexBox class="sapUiSmallMarginBeginEnd" alignItems="Start" justifyContent="SpaceAround" direction="Column" wrap="Wrap" renderType="Bare">
                        <items>
                           
                            <ObjectAttribute title="{i18n>creationDate}" text="{path: 'CreatedAt',formatter:'.formatter.dateFormatter2'}"/>
                             
                        </items>
                    </FlexBox>

                    <FlexBox class="sapUiSmallMarginBeginEnd" alignItems="Start" justifyContent="SpaceAround" direction="Column" wrap="Wrap" renderType="Bare">
                        <items>
                           <ObjectAttribute title="{i18n>createdBy}" text="{CreatedBy}"/>
                            
                        </items>
                    </FlexBox>

                   
                </FlexBox>
            </uxap:headerContent>

            
            

            <uxap:sections>
                <uxap:ObjectPageSection >
                    <uxap:subSections>
                    <uxap:ObjectPageSubSection>
                    
        <ObjectAttribute title="Title" text="{Name}"/>
		
	
                    </uxap:ObjectPageSubSection>
                        <uxap:ObjectPageSubSection  class="sapUiMediumMargin">
                              
                                    <UploadCollection
				id="UploadCollection"
				maximumFilenameLength="{settings>/maximumFilenameLength}"
				maximumFileSize="{settings>/maximumFileSize}"
				multiple="true"
				change="onChange"
				fileDeleted="onFileDeleted"
				filenameLengthExceed="onFilenameLengthExceed"
				fileRenamed="onFileRenamed"
				fileSizeExceed="onFileSizeExceed"
				fileType="{fileTypes>/selected}"
				selectionChange="onSelectionChange"
				typeMissmatch="onTypeMissmatch"
				uploadComplete="onUploadComplete"
				beforeUploadStarts="onBeforeUploadStarts"
				uploadTerminated="onUploadTerminated"
				items="{
					path: 'demo>/results',
					templateShareable: false
				}"
				numberOfAttachmentsText="Uploaded (8)"
				showSeparators="{settings>/showSeparators}"
				uploadEnabled="{settings>/uploadEnabled}"
				uploadButtonInvisible="{=!${settings>/uploadButtonVisible}}"
				mode="{settings>/mode}">
				<toolbar>
					<OverflowToolbar id="myId">
						<Title id="attachmentTitle" />
						<ToolbarSpacer />
						<SearchField width="10rem" search="onSearch" />
						<Button
							id="deleteSelectedButton"
							text="Delete"
							press="onDeleteSelectedItems"
							enabled="false"
							visible="false"
							type="Transparent" />
						<ToggleButton
							id="selectAllButton"
							text="Select all"
							press="onSelectAllPress"
							enabled="false"
							visible="false"
							type="Transparent" />
						<UploadCollectionToolbarPlaceholder />
					</OverflowToolbar>
				</toolbar>
				<items>
					<UploadCollectionItem
						documentId="{demo>Id}"
						fileName="{demo>Role}"
						mimeType="{mimeType}"
						thumbnailUrl="{demo>thumbnailUrl}"
						url="{demo>file}"
						enableEdit="{settings>/enableEdit}"
						enableDelete="{settings>/enableDelete}"
						visibleDelete="{settings>/visibleDelete}"
						visibleEdit="{settings>/visibleEdit}"
						attributes="{path : 'attributes', templateShareable : false}"
						statuses="{path : 'statuses', templateShareable : false}"
						markers="{path : 'markers', factory: '.createObjectMarker'}"
						selected="{selected}">
						<attributes>
							<ObjectAttribute title="{demo>Description}"
								text="{path : '{demo>Description', formatter : '.formatAttribute'}"
								active="{active}"
								press="onAttributePress" />
						</attributes>
						<statuses>
							<ObjectStatus title="{demo>Description}"
								text="{demo>Description}"
								state="{demp>Description}" />
						</statuses>
					</UploadCollectionItem>
				</items>
			</UploadCollection>
                                          
                            
                        </uxap:ObjectPageSubSection>
                        
                    </uxap:subSections>
                </uxap:ObjectPageSection>
            </uxap:sections>
        </uxap:ObjectPageLayout>

</mvc:View>

	
