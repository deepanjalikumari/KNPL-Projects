<mvc:View xmlns:vbm="sap.ui.vbm" xmlns:mvc="sap.ui.core.mvc" xmlns:uxap="sap.uxap" xmlns:layout="sap.ui.layout" xmlns:core="sap.ui.core" xmlns="sap.m" xmlns:m="sap.m" controllerName="com.knpl.pragati.Training_Learning.controller.TrainingTab" height="100%">
    <uxap:ObjectPageLayout showFooter="true" id="ObjectPageLayout" showTitleInHeaderContent="true" upperCaseAnchorBar="false" headerContentPinnable="true" toggleHeaderOnTitleClick="true">
        <uxap:headerTitle>
            <uxap:ObjectPageDynamicHeaderTitle>
                <uxap:breadcrumbs>
                    <Breadcrumbs id="breadcrumbsId" currentLocationText="{oModelView>/TrainingVideoDetails}">
                        <Link text="{i18n>TrainingVideo}" press="onCancel"/>
                    </Breadcrumbs>
                </uxap:breadcrumbs>
                <uxap:expandedHeading>
                    <m:Title text="{oModelView>/TrainingDetails/Title}" wrapping="true"/>
                </uxap:expandedHeading>
                <uxap:expandedContent>
                    <m:Text text="{oModelView>/TrainingDetails/TrainingCode}"/>
                </uxap:expandedContent>

                <uxap:snappedHeading>
                    <m:FlexBox fitContainer="true" alignItems="Center" renderType="Bare">
                        <!-- <m:Avatar src="sap-icon://picture" class="sapUiTinyMarginEnd"/> -->
                        <!-- <FlexBox direction="Column" renderType="Bare">
                            <Title text="{Title}" wrapping="true"/>
                        </FlexBox> -->
                    </m:FlexBox>
                </uxap:snappedHeading>
            </uxap:ObjectPageDynamicHeaderTitle>
        </uxap:headerTitle>

        <uxap:headerContent>
            <m:FlexBox wrap="Wrap" height="100%" class="sapUiSmallMarginBottom" renderType="Bare">
                <m:Avatar fallbackIcon="sap-icon://picture" displaySize="L" src="{oModelControl2>/ProfilePic}" class="sapUiTinyMarginBegin"/>

                <m:FlexBox class="sapUiSmallMarginBeginEnd" alignItems="Start" direction="Column" wrap="Wrap" renderType="Bare">
                    <m:ObjectStatus title="{i18n>colCreationDate}" text="{path: 'oModelView>/TrainingDetails/CreatedAt', type: 'sap.ui.model.type.Date', formatOptions: { pattern: 'dd/MM/yyyy'}}"/>
                    <m:ObjectStatus title="{i18n>colStartDateTime}" text="{path: 'oModelView>/TrainingDetails/ViewStartDate', formatOptions: { pattern: 'dd/MM/yyyy hh:mm a'}}" visible="{= ${appView>/trainingType} !== 'VIDEO'}"/>
                    <m:ObjectStatus title="{i18n>colRewardPoints}" text="{oModelView>/TrainingDetails/RewardPoints}" visible="{= ${appView>/trainingType} !== 'VIDEO'}"/>
                </m:FlexBox>
                <layout:VerticalLayout class="sapUiSmallMarginBeginEnd">
                    <m:ObjectStatus title="{i18n>colCreatedBy}" text="{= ${oModelView>/TrainingDetails/Creator/Name}=== null ? 'SYSTEM' : ${oModelView>/TrainingDetails/Creator/Name} }"/>
                    <m:ObjectStatus title="{i18n>colEndDateTime}" text="{path: 'oModelView>/TrainingDetails/ViewEndDate', formatOptions: { pattern: 'dd/MM/yyyy hh:mm a'}}" visible="{= ${appView>/trainingType} !== 'VIDEO'}"/>
                </layout:VerticalLayout>
                <layout:VerticalLayout class="sapUiSmallMarginBeginEnd" visible="{= ${appView>/trainingType} === 'OFFLINE'}">
                    <m:ObjectStatus title="{i18n>colAddress}"/>
                    <m:ObjectStatus text="{oModelView>/TrainingDetails/Address}"/>
                    <m:ObjectStatus text="{oModelView>/TrainingDetails/City/City} {oModelView>/TrainingDetails/State/State}"/>
                </layout:VerticalLayout>
            </m:FlexBox>
        </uxap:headerContent>

        <uxap:sections>
            <uxap:ObjectPageSection titleUppercase="false" title="{i18n>TrainingDetails}">
                <uxap:subSections>
                    <uxap:ObjectPageSubSection>
                        <VBox id="idVbTrDetails" renderType="Bare">
                            <core:Fragment fragmentName="com.knpl.pragati.Training_Learning.view.fragments.ViewTraining" type="XML"/>
                        </VBox>
                    </uxap:ObjectPageSubSection>
                </uxap:subSections>
            </uxap:ObjectPageSection>
            <uxap:ObjectPageSection titleUppercase="false" title="{i18n>Questionnaire}" visible="{= ${appView>/trainingType} === 'ONLINE'}">
                <uxap:subSections>
                    <uxap:ObjectPageSubSection>
                        <VBox id="idVbQuestionnaire" renderType="Bare">
                            <core:Fragment fragmentName="com.knpl.pragati.Training_Learning.view.fragments.Questionnaire" type="XML"/>
                        </VBox>
                    </uxap:ObjectPageSubSection>
                </uxap:subSections>
            </uxap:ObjectPageSection>
            <uxap:ObjectPageSection titleUppercase="false" title="{i18n>totalEnrollment}" visible="{= ${appView>/trainingType} === 'ONLINE'}">
                <uxap:subSections>
                    <uxap:ObjectPageSubSection>
                        <VBox id="idVbEnrollment" renderType="Bare">
                            <core:Fragment fragmentName="com.knpl.pragati.Training_Learning.view.fragments.Enrollment" type="XML"/>
                        </VBox>
                    </uxap:ObjectPageSubSection>
                </uxap:subSections>
            </uxap:ObjectPageSection>
            <uxap:ObjectPageSection titleUppercase="false" title="{i18n>attendance}" visible="{= ${appView>/trainingType} !== 'VIDEO'}">
                <uxap:subSections>
                    <uxap:ObjectPageSubSection>
                        <VBox id="idVbAttendance" renderType="Bare">
                            <core:Fragment fragmentName="com.knpl.pragati.Training_Learning.view.fragments.Attendance" type="XML"/>
                        </VBox>
                    </uxap:ObjectPageSubSection>
                </uxap:subSections>
            </uxap:ObjectPageSection>
        </uxap:sections>
        <uxap:footer>
            <Bar>
                <contentRight>
                    <Button id="edit" text="{i18n>btnEdit}" type="Emphasized" enabled="true" press="handleEditPress"/>
                    <Button id="save" text="{i18n>btnSave}" type="Emphasized" visible="false" press="handleSavePress"/>
                    <Button id="cancel" text="{i18n>btnCancel}" type="Ghost" visible="false" press="handleCancelPress"/>
                </contentRight>
            </Bar>
        </uxap:footer>
    </uxap:ObjectPageLayout>
</mvc:View>
