<mvc:View controllerName="com.knpl.pragati.Training_Learning.controller.AddTraining" xmlns:u="sap.ui.unified" xmlns:mvc="sap.ui.core.mvc" xmlns:core="sap.ui.core" xmlns="sap.m" xmlns:f="sap.ui.layout.form" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:uxap="sap.uxap" height="100%">
    <Page busy="{oModelView>/busy}" busyIndicatorDelay="0" showNavButton="false" showHeader="true" navButtonPress="navPressBack">
        <headerContent>
            <Bar>
                <contentLeft>
                    <Breadcrumbs currentLocationText="{oModelView>/AddEditTraining}">
                        <Link text="{i18n>TrainingVideo}" press="onCancel"/>
                    </Breadcrumbs>
                </contentLeft>
            </Bar>
        </headerContent>
        <VBox id="idVbxAddTraining" width="100%">
        <f:SimpleForm id="AddTrainingDetails" editable="true" layout="ResponsiveGridLayout" title="{oModelView>/AddEditTrainingDetails}" labelSpanXL="12" labelSpanL="12" labelSpanM="12" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="2" columnsL="2" columnsM="2" singleContainerFullSize="false">
        <f:content>
            <core:Title text="{i18n>TrainingDetails}"/>
                <Label text="{i18n>colTrainingType}" required="true"/>
                <ComboBox items="{path:'/MasterTrainingTypeSet', filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ] }" selectedKey="{oModelView>/TrainingDetails/TrainingTypeId}" editable="false">
                    <items>
                        <core:Item text="{TrainingType}" key="{Id}"/>
                    </items>
                </ComboBox>
                <Label text="{i18n>colTitle}" required="true"/>
                <Input maxLength="100" value="{oModelView>/TrainingDetails/Title}"/>

                <Label text="{i18n>colTrainingDescription}"/>
                <TextArea value="{oModelView>/TrainingDetails/Description}" rows="5" maxLength="1000"/>

                <Label text="{i18n>colStartDateTime}" required="true"/>
                <DateTimePicker valueStateText="Enter a valid date and time" dateValue="{oModelView>/TrainingDetails/StartDate}" valueFormat="yyyy-MM-dd HH:mm:ss" displayFormat="dd MMM yyyy hh:mm a" required="true"/>

                <Label text="{i18n>colEndDateTime}" required="true"/>
                <DateTimePicker valueStateText="Enter a valid date and time" dateValue="{oModelView>/TrainingDetails/EndDate}" valueFormat="yyyy-MM-dd HH:mm:ss" displayFormat="dd MMM yyyy hh:mm a" required="true"/>

                <Label text="{i18n>colRewardPoints}" required="true"/>
                <Input value="{oModelView>/TrainingDetails/RewardPoints}"/>

                <Label text="{i18n>colLink}"/>
                <Input maxLength="300" value="{oModelView>/TrainingDetails/Url}" type="Url"/>

                <core:Title text="{= ${appView>/trainingType} === 'ONLINE' ? 'Target Group' : '' }"/>

                <Label text="{i18n>colState}" visible="{= ${appView>/trainingType} === 'OFFLINE'}"/>
                <ComboBox visible="{= ${appView>/trainingType} === 'OFFLINE'}" items="{path:'/MasterStateSet', sorter:{path:'State'}, filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ] }" change="onStateChange" selectedKey="{oModelView>/TrainingDetails/StateId}">
                    <items>
                        <core:Item text="{State}" key="{Id}"/>
                    </items>
                </ComboBox>
                
                <Label text="{i18n>colCity}" visible="{= ${appView>/trainingType} === 'OFFLINE'}"/>
                <ComboBox visible="{= ${appView>/trainingType} === 'OFFLINE'}" id="cmbCity" busy="{oModelView>/bCityItemsBusy}" busyIndicatorDelay="0" change="onChangeCity" editable="{= ${oModelView>/TrainingDetails/StateId} !== '' }" items="{path:'/MasterCitySet', sorter:{path:'City'}, filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ] }" selectedKey="{oModelView>/TrainingDetails/CityId}">
                    <items>
                        <core:Item text="{City}" key="{Id}"/>
                    </items>
                </ComboBox>

                <Label text="{i18n>colAddress}" visible="{= ${appView>/trainingType} === 'OFFLINE'}"/>
                <TextArea value="{oModelView>/TrainingDetails/Address}" rows="5" maxLength="500" visible="{= ${appView>/trainingType} === 'OFFLINE'}"/>

                <!-- <Label text="{i18n>colZone}" visible="{= ${appView>/trainingType} === 'ONLINE'}"/>
                <ComboBox visible="{= ${appView>/trainingType} === 'ONLINE'}" items="{path:'/MasterZoneSet' }" selectedKey="{oModelView>/TrainingDetails/DivisionId}">
                    <core:Item text="{DivisionId}" key="{Id}"/>
                </ComboBox> -->

                <Label text="{i18n>colDepot}" visible="{= ${appView>/trainingType} === 'ONLINE'}"/>
                <ComboBox visible="{= ${appView>/trainingType} === 'ONLINE'}" items="{path:'/MasterDepotSet' }" selectedKey="{oModelView>/TrainingDetails/DepotId}">
                    <items>
                        <core:Item text="{Id}" key="{Id}"/>
                    </items>
                </ComboBox>
                <Label text="{i18n>colDivision}" visible="{= ${appView>/trainingType} === 'ONLINE'}"/>
                <ComboBox visible="{= ${appView>/trainingType} === 'ONLINE'}" items="{path:'/MasterDivisionSet' }" selectedKey="{oModelView>/TrainingDetails/DivisionId}">
                    <items>
                        <core:Item text="{Division}" key="{Id}"/>
                    </items>
                </ComboBox>
                <Label text="{i18n>colPainterType}" visible="{= ${appView>/trainingType} === 'ONLINE'}"/>
                <ComboBox visible="{= ${appView>/trainingType} === 'ONLINE'}" items="{path:'/MasterPainterTypeSet', filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ] }" selectedKey="{oModelView>/TrainingDetails/PainterType}">
                    <items>
                        <core:Item text="{PainterType}" key="{Id}"/>
                    </items>
                </ComboBox>
                <Label text="{i18n>colPainterArcheType}" visible="{= ${appView>/trainingType} === 'ONLINE'}"/>
                <ComboBox visible="{= ${appView>/trainingType} === 'ONLINE'}" items="{path:'/MasterArcheTypeSet', filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ] }" selectedKey="{oModelView>/TrainingDetails/PainterArcheId}">
                    <items>
                        <core:Item text="{ArcheType}" key="{Id}"/>
                    </items>
                </ComboBox>
                
                <!-- <Label text="{i18n>colImage}"/>
                    <u:FileUploader
                        id="idFormTrainingImgUploader"
                        name="formTrainingImgUploader"
                        width="100%"
                        tooltip="{i18n>fileUploaderTrainingtip}"
                        change="onChangeFile"
                        typeMissmatch="handleTypeMissmatch"
                        fileType="png,jpg,jpeg"
                        useMultipart="false"
                        sendXHR="true"
                        uploadComplete="handleUploadComplete" />
                    <Image id="idPreviewImage" width="100px" height="100px" /> -->

                    <Image width="5rem" class="sapUiTinyMargin" height="5rem"
					    src="{ parts : [{path : 'oModelView>__metadata'}, { path : 'oModelView>/oImage' } ] , formatter : '.formatter.giveImage' }"/>
				        <u:FileUploader maximumFileSize="2" fileAllowed="onUpload" tooltip="{i18n>fileUploaderTrainingtip}" buttonOnly="true"
					    buttonText="{i18n>fileUploaderTrainingtip}"/>

                <core:Title text="{= ${appView>/trainingType} === 'ONLINE' ? 'Questionnaire' : '' }"/>
                <List visible="{= ${appView>/trainingType} === 'ONLINE'}" id="List" mode="Delete" delete="onDeleteQuestionnaire" enableBusyIndicator="true" headerText="{i18n>Questionnaire}" growing="true"
					items="{path: 'oModelView>/TrainingDetails/TrainingQuestionnaire' , filters : [ { path : 'IsArchived' , operator : 'EQ' , value1 : false } ] }">
					<headerToolbar>
						<Toolbar>
							<ToolbarSpacer/>
				    		<Button press="onAddQuestionnaire" text="{i18n>btnAddQuestionnaire}"/>
						</Toolbar>
					</headerToolbar>
                    <CustomListItem type="Active">
                        <VBox renderType="Bare">
                            <HBox>
                                <Text text="{oModelView>Question}" class="sapUiSmallMarginBeginEnd"/>
                                <Button icon="sap-icon://edit" press="onEditQuestionnaire" type="Transparent" tooltip="{i18n>Edit}"/>
                            </HBox>
                            <HBox items="{oModelView>TrainingQuestionnaireOptions}">
                                <ObjectStatus text="{oModelView>Option}" state="{= ${oModelView>IsCorrect} ? 'Success' : 'None' }" visible="{= ${oModelView>IsArchived} === false }" class="sapUiSmallMarginBeginEnd"/>
                            </HBox>
                        </VBox>
                    </CustomListItem>
				</List>
        </f:content>
        </f:SimpleForm>
        </VBox>
        <footer>
            <Toolbar>
                <ToolbarSpacer/>
                <Button text="{i18n>btnCancel}" press="onCancel"/>
                <Button text="{i18n>btnSave}" type="Emphasized" press="onSaveTraining"/>
            </Toolbar>
        </footer>
    </Page>
</mvc:View>
